def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '3'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 27

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }



    defaultConfig {

        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.holdingfuture.flutterapp"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 10 //flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        splits {
            abi {
                enable true
                reset()
                include 'armeabi-v7a'
            }
        }

    }

//    证书指纹:
//    MD5: 85:B9:EE:41:B7:A2:24:8E:37:1D:1E:D8:C7:9B:F5:BA
//    SHA1: 04:CC:9C:BB:8A:D0:3A:13:93:07:37:35:00:EC:78:AB:DE:7F:31:05
//    SHA256: 42:EB:DC:A3:3A:EA:5B:2E:B2:75:69:A7:0F:53:74:4F:DF:5A:76:A7:C9:06:87:2B:95:71:FC:CE:E3:D9:11:DE
    signingConfigs { //签名配置
        release {
            storeFile file("../android.jks")
            storePassword "20190222"
            keyAlias "android_key"
            keyPassword "20190222"
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            //  shrinkResources true
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
